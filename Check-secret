import os
import requests
import datetime

TENANT_ID = os.getenv("TENANT_ID")
CLIENT_ID = os.getenv("CLIENT_ID")
CLIENT_SECRET = os.getenv("CLIENT_SECRET")

token_url = f"https://login.microsoftonline.com/{TENANT_ID}/oauth2/v2.0/token"
resource = "https://graph.microsoft.com/.default"

token_data = {
    "client_id": CLIENT_ID,
    "client_secret": CLIENT_SECRET,
    "scope": resource,
    "grant_type": "client_credentials",
}

response = requests.post(token_url, data=token_data)
response.raise_for_status()
access_token = response.json()["access_token"]

headers = {
    "Authorization": f"Bearer {access_token}",
    "Content-Type": "application/json",
}

apps_url = "https://graph.microsoft.com/v1.0/applications?$select=displayName,appId,passwordCredentials,owners"
response = requests.get(apps_url, headers=headers)
apps = response.json()["value"]

today = datetime.datetime.now(datetime.timezone.utc)
threshold = today + datetime.timedelta(days=30)

expiring = []

for app in apps:
    display_name = app["displayName"]
    app_id = app["appId"]
    owners_url = f"https://graph.microsoft.com/v1.0/applications/{app['id']}/owners"
    owner_resp = requests.get(owners_url, headers=headers).json()
    owners = ", ".join(owner.get("userPrincipalName", "N/A") for owner in owner_resp.get("value", []))

    for secret in app.get("passwordCredentials", []):
        expiry_str = secret.get("endDateTime")
        if expiry_str:
            expiry = datetime.datetime.fromisoformat(expiry_str)
            if expiry < threshold:
                expiring.append({
                    "displayName": display_name,
                    "appId": app_id,
                    "owner": owners,
                    "expiry": expiry.strftime("%Y-%m-%d %H:%M:%S UTC")
                })

# Write to HTML report
with open("expiring_secrets_report.html", "w") as f:
    f.write("<html><body><h2>Expiring App Registration Secrets (Next 30 Days)</h2>")
    f.write("<table border='1'><tr><th>Display Name</th><th>App ID</th><th>Owner(s)</th><th>Expiry Date</th></tr>")
    for item in expiring:
        f.write(f"<tr><td>{item['displayName']}</td><td>{item['appId']}</td><td>{item['owner']}</td><td>{item['expiry']}</td></tr>")
    f.write("</table></body></html>")

print("âœ… Secrets check completed. Report written to expiring_secrets_report.html")
